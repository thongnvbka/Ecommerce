@model WarehouseMeta
@{
    var listUser = new List<SelectListItem>()
    {
        new SelectItem() { Text = @"Select warehouse staff", Selected = true}
    };

    var list = ViewBag.ListUser;

    foreach (var item in list)
    {
        listUser.Add(new SelectItem() { Value = item[0], Text = item[1] });
    }

}


<link href="~/Content/plugins/bootstrap-tagsinput/bootstrap-tagsinput.css" rel="stylesheet" />
<div class="form-group">
    <div class="col-sm-8 col-md-5 col-lg-4 col-sm-offset-2">
        @Html.ValidationSummary(true)
    </div>
</div>
@Html.HiddenFor(x => x.Id)

<div class="form-group">
    <label for="ParentId" class="col-sm-2 control-label">Warehouse ID <span class="color-red">*</span></label>
    <div class="col-sm-8 col-md-3 col-lg-3">
        @Html.TextBoxFor(x => x.Code, new Dictionary<string, object>
                {
                    {"class", "form-control"}
                })
        @Html.ValidationMessageFor(x => x.Code)
    </div>
</div>
<div class="form-group">
    <label for="Name" class="col-sm-2 control-label">Warehouse name<span class="color-red">*</span></label>
    <div class="col-sm-8 col-md-6 col-lg-6">
        @Html.TextBoxFor(x => x.Name, new Dictionary<string, object>
                {
                    {"class", "form-control"}
                })
        @Html.ValidationMessageFor(x => x.Name)
    </div>
</div>
<div class="form-group">
    <label for="ParentId" class="col-sm-2 control-label">Person in charge</label>
    <div class="col-sm-8 col-md-3 col-lg-3">
        @Html.DropDownListFor(x => x.UserId, listUser, new Dictionary<string, object>()
                {
                    {"class", "form-control select-view user-select"}
                })
        @Html.ValidationMessageFor(x => x.UserId)
    </div>
</div>
<div class="form-group">
    <label for="Status" class="col-sm-2 control-label">Country</label>
    <div class="col-sm-8 col-md-3 col-lg-3">
        @Html.DropDownListFor(x => x.Country, new List<SelectListItem>()
        {
            new SelectItem() { Value = "Vietnam", Text = @"VietNam", Selected = true},
            new SelectItem() { Value = "China", Text = @"China" }
        }, new Dictionary<string, object>()
        {
            {"class", "form-control select-view"}
        })
        @Html.ValidationMessageFor(x => x.Country)
    </div>
</div>
<div class="form-group">
    <label for="Name" class="col-sm-2 control-label">Warehouse address <span class="color-red">*</span></label>
    <div class="col-sm-8 col-md-6 col-lg-6">
        @Html.TextBoxFor(x => x.Address, new Dictionary<string, object>
                {
                    {"class", "form-control"}
                })
        @Html.ValidationMessageFor(x => x.Address)
    </div>
</div>
<div class="form-group">
    <label for="Status" class="col-sm-2 control-label">Status</label>
    <div class="col-sm-8 col-md-3 col-lg-3">
        @Html.DropDownListFor(x => x.Status, new List<SelectListItem>()
                {
                    new SelectItem() { Value = "1", Text = @"Active", Selected = true},
                    new SelectItem() { Value = "2", Text = @"Non-access" }
                }, new Dictionary<string, object>()
                {
                    {"class", "form-control select-view"}
                })
        @Html.ValidationMessageFor(x => x.Status)
    </div>
</div>
<div class="form-group">
    <label for="Description" class="col-sm-2 control-label">Describe</label>
    <div class="col-sm-8 col-md-6 col-lg-6">
        @Html.TextAreaFor(x => x.Description, new Dictionary<string, object>
        {
            {"class", "form-control"},
            {"rows", "5"}
        })
        @Html.ValidationMessageFor(x => x.Description)
    </div>
</div>

@using (Html.BeginScriptBlock())
{

    <script type="text/javascript">

        $(function () {

            $('select').select2({
                minimumResultsForSearch: -1
            });

            $('.user-select').select2();


            @if (TempData["Msg"] != null) {
                <text>toastr.success('@Html.Raw(TempData["Msg"])');</text>
            }
        });
    </script>
}
